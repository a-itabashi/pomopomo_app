<% provide(:title, "休憩タイム") %>
<div class="text-center top_clock">
  <div class="rest_timer" id="timer">25:00</div>
  <div class="rest_time">Rest Time</div>
</div>
<%= audio_tag("alert.mp3", id:"audio") %>
<hr>
<div>
  <%= render "shared/post_form" %>
</div>

<script type="text/javascript">
document.addEventListener("turbolinks:load", function(){
  let timer = document.getElementById('timer');
  let startTime;
  let timeLeft;
  let timeToCountDown = 1000 * 60 * 5;
  let timerId;
  let stopId
  let isRunning = false;
  let show_time = document.getElementById('show_time');

  function countDown(){
    timerId = setTimeout(function(){
      timeLeft = timeToCountDown - (Date.now() - startTime);

      if(timeLeft < 0){
        isRunning = false;
        clearTimeout(timerId);
        timeLeft = 0;
        timeToCountDown = 0;
        updateTimer(timeLeft);
        console.log("音楽ストップ");
        location.href="/musics/index";
        return;
      }
      updateTimer(timeLeft)
      countDown();
    },10);
  }

  function updateTimer(t){
    let d = new Date(t);
    let m = d.getMinutes();
    let s = d.getSeconds();
    m = ('0' + m).slice(-2);
    s = ('0' + s).slice(-2);
    let timerString = m + ":" + s;
    timer.textContent = timerString;
    document.title = timerString;
  }

  function timer_start(){
    if (isRunning === false){
      isRunning = true;
      startTime = Date.now();
      countDown();
    }else{
      isRunning = false;
      timeToCountDown = timeLeft;
      clearTimeout(timerId);
    }
    setTimeout(function(){
      audio.play();
    }, (timeToCountDown - 6000))
  }

  window.onload = timer_start(); 
  console.log("タイマースタート");
  window.addEventListener('popstate', function (e) {
    clearTimeout(timerId);
  });
  $(document).ready(function () {
    let view_box = $('.img_avatar');

    $(".file").on('change', function(){
      let fileprop = $(this).prop('files')[0],
      find_img = $(this).next('img'),
      fileRdr = new FileReader();

      if(find_img.length){
        find_img.nextAll().remove();
        find_img.remove();
      }

      let img = '<img width="100" alt="" class="img_view"><a href="#" class="img_del">プレビューを削除する</a>';
      view_box.append(img);

      fileRdr.onload = function() {    
        view_box.find('img').attr('src', fileRdr.result);
        img_del(view_box); 
      }

      fileRdr.readAsDataURL(fileprop);  

      if($(".img_view").length){
        $(".file").hide();
      }

      $(".your_preview").show();
    });

    function img_del(target){
      target.find("a.img_del").on('click',function(){
        $(this).parent().find('input[type=file]').val('');
        $(this).parent().find('.img_view, br').remove();
        $(this).remove();
        $("#post_post_image").val("");
        $(".file").show();
        $(".your_preview").hide();

        return false;
      });
    }  
  });
});
</script>